<div class="section__wrapper section__wrapper--no-overflow">
  {%-
    render 'component-section-padding'
    id: section.id,
    color_background_gradient: section.settings.color_background_gradient,
    color_background: section.settings.color_background,
    padding_top_mobile: section.settings.padding_top_mobile,
    padding_bottom_mobile: section.settings.padding_bottom_mobile,
    padding_top_desktop: section.settings.padding_top_desktop,
    padding_bottom_desktop: section.settings.padding_bottom_desktop,
    style_line_top: section.settings.style_line_top,
    style_line_bottom: section.settings.style_line_bottom,
    color_line: section.settings.color_line
  -%}
  {% if section.settings.color_background_gradient and section.settings.color_background_gradient != '' or section.settings.color_background and section.settings.color_background != '' and section.settings.color_background != 'rgba(0,0,0,0)' %} <div class="section__wrapper--background" style="background: {% if section.settings.color_background_gradient != '' %}{{ section.settings.color_background_gradient }}{% else %}{{ section.settings.color_background }}{% endif %};">{% endif %}
  <div class="container">
    {%- render 'component-header-section' id: section.id, icon: section.settings.icon, caption: section.settings.caption, heading: section.settings.heading, heading_type: section.settings.heading_type, subheading: section.settings.subheading, button_text: section.settings.button_text, button_url: section.settings.button_url, style_button: section.settings.style_button, color_icon: section.settings.color_icon, color_text: section.settings.color_text, color_subheading: section.settings.color_subheading -%}
  </div>

  {%- if section.settings.display_filters or section.settings.display_grid_size -%}
    <script src="{{ 'component-filter-blog.js' | asset_url }}" defer="defer"></script>
    <div class="grid-archive__header sticky" id="grid-archive-header">
      <div class="grid-archive__header__inner-container">
        <div class="container">
          {%- if section.settings.display_filters and section.blocks.size > 0 -%}
            <div class="grid-archive__filter-triggers">
              <a class="button--sm toggle-filtering">
                {{- 'general.filters.filters' | t }}
                {%- render 'component-icon', icon: 'filter_list' -%}
              </a>
            </div>
          {%- endif -%}
          {%- if section.settings.display_grid_size -%}
            <div class="grid-archive__subnav">
              <div class="cols no-js-hidden">
                <p>View</p>
                {%- render 'component-icon-custom', icon: 'one-col', icon_class: 'one-col view-icon-mobile' -%}
                {%- render 'component-icon-custom', icon: 'two-col', icon_class: 'two-col active view-icon-mobile' -%}
                {%- render 'component-icon-custom', icon: 'three-col', icon_class: 'three-col active view-icon-desktop' -%}
                {%- render 'component-icon-custom', icon: 'four-col', icon_class: 'four-col view-icon-desktop' -%}
              </div>
            </div>
          {%- endif -%}
        </div>
      </div>
    </div>
  {%- endif -%}

  <div class="grid-archive__outer-container">
    <div class="grid-archive__main-container{% if section.settings.display_filters == false or section.blocks.size == 0 %}--filters-hidden{% endif %} container">
      {%- if section.settings.display_filters -%}
        {% if section.blocks.size > 0 %}
          <div class="grid-archive__filters-container" id="main-collection-filters-container">
            <div class="facets" id="main-collection-filters">
              <div class="facets__header">
                <p class="text-xl">{{ 'general.filters.filters' | t }}</p>
                <a href="{{ blog.url }}" class="text-xs">{{ 'general.filters.clear_all' | t }}</a>
                <button class="facets__mobile-close">{{ 'general.filters.close' | t }}</button>
              </div>
              <form>
                {%- for block in section.blocks -%}
                  {%- assign filterIndex = forloop.index -%}
                  {%- assign tags = block.settings.filter_tags | split: "," -%}
                  <div class="facets__facet">
                    <details>
                      <summary tabindex="0">
                        <p class="text-md">{{ block.settings.filter_title }}</p>
                        {% render 'component-icon', icon: 'expand_more' %}
                      </summary>

                      <div class="content">
                        <ul>
                          {%- for tag in tags -%}
                            <li>
                              <label class="form-control" for="tag-{{ filterIndex }}-{{ forloop.index }}">
                                <input
                                  type="checkbox"
                                  name="tag"
                                  value="{{ tag | handleize }}"
                                  id="tag-{{ filterIndex }}-{{ forloop.index }}"
                                >
                                <span>{{ tag | capitalize | replace: "-", " " | replace: "_", " " }}</span>
                              </label>
                            </li>
                          {%- endfor -%}
                        </ul>
                      </div>
                    </details>
                  </div>
                {%- endfor -%}
              </form>
            </div>
          </div>
        {% endif %}
      {%- endif -%}

      <div class="grid-archive__products-grid-container">
        <div class="grid-archive__content grid-archive__content--three-col grid-archive__content--two-col">
          {%- liquid
            paginate blog.articles by 24
              if blog.articles.size > 0
                assign articles = blog.articles | sort: section.settings.display_sort_by
                if section.settings.display_sort_order == 'descending'
                  assign articles = articles | reverse
                endif
                for article in articles
                  render 'component-card-article', article: article,  ratio_image: section.settings.ratio_image, style_card: section.settings.style_card, display_text_card: section.settings.display_text_card, style_button_card: section.settings.settings_style_cta_card, display_caption: section.settings.card_caption_article
                endfor

                if paginate.pages > 1
                  render 'component-pagination', paginate: paginate
                endif
              else
                render 'component-no-results'
              endif
            endpaginate
          -%}
        </div>
      </div>
    </div>
  </div>
  {% if section.settings.color_background_gradient and section.settings.color_background_gradient != '' or section.settings.color_background and section.settings.color_background != '' and section.settings.color_background != 'rgba(0,0,0,0)' %}</div>{%- endif -%}
</div>

{% schema %}
{
  "name": "t:name.blog_content",
  "tag": "section",
  "class": "grid-archive blog",
  "settings": [
    {
      "type": "paragraph",
      "content": "t:info.intro_section_blog_content"
    },
    {
      "type": "range",
      "id": "posts_per_page",
      "min": 1,
      "max": 48,
      "label": "t:label.posts_per_page",
      "default": 24
    },
    {
      "type": "checkbox",
      "id": "display_filters",
      "label": "t:label.enable_filters",
      "info": "t:info.enable_filters",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "display_grid_size",
      "label": "t:label.enable_grid_size_interface",
      "default": true
    },
    {
      "type": "select",
      "id": "display_sort_by",
      "label": "t:label.sort_by",
      "options": [
        {
          "value": "title",
          "label": "t:label.title"
        },
        {
          "value": "published_at",
          "label": "t:label.date_published"
        }
      ]
    },
    {
      "type": "select",
      "id": "display_sort_order",
      "label": "t:label.sort_order",
      "options": [
        {
          "value": "ascending",
          "label": "t:label.ascending"
        },
        {
          "value": "descending",
          "label": "t:label.descending"
        }
      ]
    },
    {
      "type": "header",
      "content": "t:info.header_card_settings"
    },
    {
      "type": "paragraph",
      "content": "t:info.intro_card_settings"
    },
    {
      "type": "select",
      "id": "ratio_image",
      "label": "t:label.image_aspect_ratio",
      "options": [
        {
          "value": "default",
          "label": "t:label.use_theme_setting"
        },
        {
          "value": "landscape",
          "label": "t:label.landscape"
        },
        {
          "value": "portrait",
          "label": "t:label.portrait"
        },
        {
          "value": "square",
          "label": "t:label.square"
        },
        {
          "value": "widescreen",
          "label": "t:label.widescreen"
        }
      ],
      "default": "default"
    },
    {
      "type": "select",
      "id": "style_card",
      "label": "t:label.card_style",
      "options": [
        {
          "value": "default",
          "label": "t:label.use_theme_setting"
        },
        {
          "value": "no_image",
          "label": "t:label.no_image"
        },
        {
          "value": "no_padding",
          "label": "t:label.no_padding"
        },
        {
          "value": "padding",
          "label": "t:label.padding"
        }
      ],
      "default": "default"
    },
    {
      "type": "select",
      "id": "display_text_card",
      "label": "t:label.card_text",
      "options": [
        {
          "value": "default",
          "label": "t:label.use_theme_setting"
        },
        {
          "value": "title_and_excerpt",
          "label": "t:label.title_and_excerpt"
        },
        {
          "value": "text",
          "label": "t:label.excerpt_only"
        },
        {
          "value": "title",
          "label": "t:label.title_only"
        },
        {
          "value": "no_text",
          "label": "t:label.no_text"
        }
      ],
      "default": "default"
    },
    {
      "type": "select",
      "id": "settings_style_cta_card",
      "label": "t:label.card_button_style",
      "options": [
        {
          "value": "default",
          "label": "t:label.use_theme_setting"
        },
        {
          "value": "primary",
          "label": "t:label.primary"
        },
        {
          "value": "secondary",
          "label": "t:label.secondary"
        },
        {
          "value": "xl",
          "label": "t:label.extra_large"
        },
        {
          "value": "plain",
          "label": "t:label.plain"
        },
        {
          "value": "sm",
          "label": "t:label.small"
        },
        {
          "value": "sm-secondary",
          "label": "t:label.small_secondary"
        }
      ],
      "default": "default"
    },
    {
      "type": "select",
      "id": "card_caption_article",
      "label": "t:label.card_caption_article",
      "options": [
        {
          "value": "default",
          "label": "t:label.use_theme_setting"
        },
        {
          "value": "author",
          "label": "t:label.author"
        },
        {
          "value": "date",
          "label": "t:label.date"
        },
        {
          "value": "author_and_date",
          "label": "t:label.author_and_date"
        },
        {
          "value": "none",
          "label": "t:label.none"
        }
      ],
      "default": "default"
    },
    {
      "type": "header",
      "content": "t:info.header_header_settings"
    },
    {
      "type": "paragraph",
      "content": "t:info.intro_header_settings"
    },
    {
      "type": "text",
      "id": "icon",
      "label": "t:label.icon",
      "info": "t:info.icon"
    },
    {
      "type": "text",
      "id": "caption",
      "label": "t:label.caption"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "t:label.heading"
    },
    {
      "type": "select",
      "id": "heading_type",
      "label": "t:label.heading_type",
      "options": [
        {
          "value": "p",
          "label": "t:label.paragraph"
        },
        {
          "value": "h1",
          "label": "t:label.heading_1"
        },
        {
          "value": "h2",
          "label": "t:label.heading_2"
        },
        {
          "value": "h3",
          "label": "t:label.heading_3"
        },
        {
          "value": "h4",
          "label": "t:label.heading_4"
        },
        {
          "value": "h5",
          "label": "t:label.heading_5"
        },
        {
          "value": "h6",
          "label": "t:label.heading_6"
        }
      ],
      "default": "h2"
    },
    {
      "type": "richtext",
      "id": "subheading",
      "label": "t:label.subheading"
    },
    {
      "type": "url",
      "id": "button_url",
      "label": "t:label.button_link"
    },
    {
      "type": "text",
      "id": "button_text",
      "label": "t:label.button_text_empty"
    },
    {
      "type": "select",
      "id": "style_button",
      "label": "t:label.button_style",
      "options": [
        {
          "value": "primary",
          "label": "t:label.primary"
        },
        {
          "value": "secondary",
          "label": "t:label.secondary"
        },
        {
          "value": "xl",
          "label": "t:label.extra_large"
        },
        {
          "value": "plain",
          "label": "t:label.plain"
        },
        {
          "value": "sm",
          "label": "t:label.small"
        },
        {
          "value": "sm-secondary",
          "label": "t:label.small_secondary"
        }
      ]
    },
    {
      "type": "header",
      "content": "t:info.header_color_settings"
    },
    {
      "type": "paragraph",
      "content": "t:info.intro_color_settings"
    },
    {
      "type": "color",
      "id": "color_icon",
      "label": "t:label.icon_color"
    },
    {
      "type": "color",
      "id": "color_subheading",
      "label": "t:label.subheading_color"
    },
    {
      "type": "color",
      "id": "color_text",
      "label": "t:label.text_color"
    },
    {
      "type": "color",
      "id": "color_background",
      "label": "t:label.background_color"
    },
    {
      "type": "color_background",
      "id": "color_background_gradient",
      "label": "t:label.background_gradient"
    },
    {
      "type": "header",
      "content": "t:info.header_section_padding_settings"
    },
    {
      "type": "paragraph",
      "content": "t:info.intro_section_padding_settings"
    },
    {
      "type": "range",
      "id": "padding_top_desktop",
      "min": 0,
      "max": 120,
      "step": 4,
      "unit": "px",
      "label": "t:label.top_padding_desktop_32",
      "default": 32
    },
    {
      "type": "range",
      "id": "padding_bottom_desktop",
      "min": 0,
      "max": 120,
      "step": 4,
      "unit": "px",
      "label": "t:label.bottom_padding_desktop_32",
      "default": 32
    },
    {
      "type": "range",
      "id": "padding_top_mobile",
      "min": 0,
      "max": 120,
      "step": 4,
      "unit": "px",
      "label": "t:label.top_padding_mobile_16",
      "default": 16
    },
    {
      "type": "range",
      "id": "padding_bottom_mobile",
      "min": 0,
      "max": 120,
      "step": 4,
      "unit": "px",
      "label": "t:label.bottom_padding_mobile_16",
      "default": 16
    },
    {
      "type": "header",
      "content": "t:info.header_separator_settings"
    },
    {
      "type": "paragraph",
      "content": "t:info.intro_separator_settings"
    },
    {
      "type": "select",
      "id": "style_line_top",
      "label": "t:label.top_separator_style",
      "options": [
        {
          "value": "dashed",
          "label": "t:label.dashed"
        },
        {
          "value": "dotted",
          "label": "t:label.dotted"
        },
        {
          "value": "line",
          "label": "t:label.line"
        },
        {
          "value": "none",
          "label": "t:label.none"
        }
      ],
      "default": "none"
    },
    {
      "type": "select",
      "id": "style_line_bottom",
      "label": "t:label.bottom_separator_style",
      "options": [
        {
          "value": "dashed",
          "label": "t:label.dashed"
        },
        {
          "value": "dotted",
          "label": "t:label.dotted"
        },
        {
          "value": "line",
          "label": "t:label.line"
        },
        {
          "value": "none",
          "label": "t:label.none"
        }
      ],
      "default": "none"
    },
    {
      "type": "color",
      "id": "color_line",
      "label": "t:label.separator_color"
    }
  ],
  "blocks": [
    {
      "type": "filter_group",
      "name": "t:name.filter_group",
      "settings": [
        {
          "type": "paragraph",
          "content": "t:info.intro_block_filter_group"
        },
        {
          "type": "text",
          "id": "filter_title",
          "label": "t:label.filter_title",
          "info": "t:info.filter_title"
        },
        {
          "type": "text",
          "id": "filter_tags",
          "label": "t:label.filter_tags",
          "info": "t:info.filter_tags"
        }
      ]
    }
  ],
  "templates": [
    "blog"
  ]
}
{% endschema %}
